# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  CodeStyle:
    runs-on: self_hosted
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: pip install flake8
      - name: CodeStyle
        run: python -m flake8 ./ --ignore=F401,E402
  Tests:
    runs-on: self-hosted
    needs: CodeStyle
    steps:
      - uses: actions/checkout@v2
      - name: Tests
        run: |
          pip install -e '.[test]'
          python -m coverage run -m pytest
          python -m coverage report
          
  build_and_pub:
    # Если тесты были пройдены успешно
    needs: Tests
    runs-on: self-hosted
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        # Сначала мы логинимся в docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u $LOGIN --password-stdin
        # Чекаутим код
      - uses: actions/checkout@master
      - name: Build image
        # Собираем image и называем его так как указано в hub.docker т.е. login/repository:version
        run: docker build -t $LOGIN/$NAME:$GITHUB_RUN_ID -f Dockerfile .
      - name: Push image to docker.io
        # Пушим образ в registry
        run: | 
            docker push $LOGIN/$NAME:$GITHUB_RUN_ID
            sudo docker run -d -p 8080:5000 --name test $LOGIN/$NAME:$GITHUB_RUN_ID
